// Code generated by protoc-gen-go.
// source: users.proto
// DO NOT EDIT!

/*
Package users is a generated protocol buffer package.

It is generated from these files:
	users.proto

It has these top-level messages:
	User
	SingleResponse
	ListResponse
	ShowRequest
	Request
*/
package users

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import organisations "github.com/lrodham/grpc-http-example/proto-go/organisations"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type User struct {
	// @inject_tag: jsonapi:"primary,user"
	ID string `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty" jsonapi:"primary,user"`
	// @inject_tag: jsonapi:"attr,name"
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty" jsonapi:"attr,name"`
	// @inject_tag: jsonapi:"attr,email"
	Email    string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty" jsonapi:"attr,email"`
	Password string `protobuf:"bytes,4,opt,name=password" json:"password,omitempty"`
	// @inject_tag: jsonapi:"attr,role"
	Role string `protobuf:"bytes,5,opt,name=role" json:"role,omitempty" jsonapi:"attr,role"`
	// @inject_tag: jsonapi:"attr,statusId"
	StatusID int64 `protobuf:"varint,6,opt,name=statusID" json:"statusID,omitempty" jsonapi:"attr,statusId"`
	// @inject_tag: jsonapi:"attr,organisationId"
	OrganisationID string `protobuf:"bytes,7,opt,name=organisationID" json:"organisationID,omitempty" jsonapi:"attr,organisationId"`
	// @inject_tag: gorm:"ForeignKey:OrganisationId" jsonapi:"relation,organisation"
	Organisation *organisations.Organisation `protobuf:"bytes,8,opt,name=organisation" json:"organisation,omitempty" gorm:"ForeignKey:OrganisationId" jsonapi:"relation,organisation"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *User) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *User) GetStatusID() int64 {
	if m != nil {
		return m.StatusID
	}
	return 0
}

func (m *User) GetOrganisationID() string {
	if m != nil {
		return m.OrganisationID
	}
	return ""
}

func (m *User) GetOrganisation() *organisations.Organisation {
	if m != nil {
		return m.Organisation
	}
	return nil
}

type SingleResponse struct {
	User *User `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *SingleResponse) Reset()                    { *m = SingleResponse{} }
func (m *SingleResponse) String() string            { return proto.CompactTextString(m) }
func (*SingleResponse) ProtoMessage()               {}
func (*SingleResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SingleResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type ListResponse struct {
	Users []*User `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type ShowRequest struct {
	ID string `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
}

func (m *ShowRequest) Reset()                    { *m = ShowRequest{} }
func (m *ShowRequest) String() string            { return proto.CompactTextString(m) }
func (*ShowRequest) ProtoMessage()               {}
func (*ShowRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ShowRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type Request struct {
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto.RegisterType((*User)(nil), "users.User")
	proto.RegisterType((*SingleResponse)(nil), "users.SingleResponse")
	proto.RegisterType((*ListResponse)(nil), "users.ListResponse")
	proto.RegisterType((*ShowRequest)(nil), "users.ShowRequest")
	proto.RegisterType((*Request)(nil), "users.Request")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Users service

type UsersClient interface {
	ListAll(ctx context.Context, in *Request, opts ...client.CallOption) (*ListResponse, error)
	Show(ctx context.Context, in *ShowRequest, opts ...client.CallOption) (*SingleResponse, error)
}

type usersClient struct {
	c           client.Client
	serviceName string
}

func NewUsersClient(serviceName string, c client.Client) UsersClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "users"
	}
	return &usersClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *usersClient) ListAll(ctx context.Context, in *Request, opts ...client.CallOption) (*ListResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Users.ListAll", in)
	out := new(ListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) Show(ctx context.Context, in *ShowRequest, opts ...client.CallOption) (*SingleResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Users.Show", in)
	out := new(SingleResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Users service

type UsersHandler interface {
	ListAll(context.Context, *Request, *ListResponse) error
	Show(context.Context, *ShowRequest, *SingleResponse) error
}

func RegisterUsersHandler(s server.Server, hdlr UsersHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Users{hdlr}, opts...))
}

type Users struct {
	UsersHandler
}

func (h *Users) ListAll(ctx context.Context, in *Request, out *ListResponse) error {
	return h.UsersHandler.ListAll(ctx, in, out)
}

func (h *Users) Show(ctx context.Context, in *ShowRequest, out *SingleResponse) error {
	return h.UsersHandler.Show(ctx, in, out)
}

func init() { proto.RegisterFile("users.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 356 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x52, 0xcf, 0x6b, 0xbb, 0x30,
	0x1c, 0xad, 0xad, 0xf6, 0xc7, 0xc7, 0xe2, 0x21, 0xfd, 0x7e, 0x21, 0x38, 0xc6, 0x9c, 0x87, 0xd1,
	0x4b, 0x75, 0x6d, 0xd9, 0x79, 0x6c, 0x78, 0x11, 0x06, 0x03, 0xcb, 0x2e, 0xbb, 0xa5, 0x6d, 0x50,
	0x41, 0x8d, 0x4b, 0x22, 0xdd, 0x3f, 0xbe, 0xfb, 0x48, 0x74, 0xc5, 0xf6, 0x96, 0xf7, 0x5e, 0xde,
	0xfb, 0xe4, 0xf3, 0x08, 0xd8, 0x8d, 0xa0, 0x5c, 0x04, 0x35, 0x67, 0x92, 0x21, 0x4b, 0x03, 0x77,
	0xc1, 0x78, 0x4a, 0xaa, 0x5c, 0x10, 0x99, 0xb3, 0xaa, 0xd3, 0xfc, 0x1f, 0x03, 0xcc, 0x0f, 0x41,
	0x39, 0x72, 0x60, 0x18, 0x47, 0xd8, 0xf0, 0x8c, 0xe5, 0x2c, 0x19, 0xc6, 0x11, 0x42, 0x60, 0x56,
	0xa4, 0xa4, 0x78, 0xa8, 0x19, 0x7d, 0x46, 0xff, 0xc0, 0xa2, 0x25, 0xc9, 0x0b, 0x3c, 0xd2, 0x64,
	0x0b, 0x90, 0x0b, 0xd3, 0x9a, 0x08, 0x71, 0x62, 0xfc, 0x88, 0x4d, 0x2d, 0x9c, 0xb1, 0x4a, 0xe1,
	0xac, 0xa0, 0xd8, 0x6a, 0x53, 0xd4, 0x59, 0xdd, 0x17, 0x92, 0xc8, 0x46, 0xc4, 0x11, 0x1e, 0x7b,
	0xc6, 0x72, 0x94, 0x9c, 0x31, 0x7a, 0x00, 0xa7, 0xff, 0xca, 0x38, 0xc2, 0x13, 0xed, 0xbc, 0x62,
	0xd1, 0x33, 0xcc, 0xfb, 0x0c, 0x9e, 0x7a, 0xc6, 0xd2, 0xde, 0xdc, 0x04, 0x97, 0x2b, 0xbe, 0xf7,
	0x50, 0x72, 0x61, 0xf0, 0xd7, 0xe0, 0xec, 0xf2, 0x2a, 0x2d, 0x68, 0x42, 0x45, 0xcd, 0x2a, 0x41,
	0xd1, 0x1d, 0x98, 0xaa, 0x27, 0x5d, 0x81, 0xbd, 0xb1, 0x83, 0xb6, 0x41, 0xd5, 0x4d, 0xa2, 0x05,
	0x7f, 0x0d, 0xf3, 0xb7, 0x5c, 0xc8, 0xb3, 0xe1, 0x1e, 0xda, 0x62, 0xb1, 0xe1, 0x8d, 0xae, 0x1d,
	0xad, 0xe2, 0xdf, 0x82, 0xbd, 0xcb, 0xd8, 0x29, 0xa1, 0x5f, 0x0d, 0x15, 0xf2, 0xba, 0x63, 0x7f,
	0x06, 0x93, 0x4e, 0xda, 0x54, 0x60, 0x29, 0xa3, 0x40, 0x8f, 0x30, 0x51, 0x53, 0x5e, 0x8a, 0x02,
	0x39, 0x5d, 0x62, 0x77, 0xc7, 0x5d, 0x74, 0xb8, 0xff, 0x0a, 0x7f, 0x80, 0xb6, 0x60, 0xaa, 0x21,
	0x08, 0x75, 0x72, 0x6f, 0xa2, 0xfb, 0xff, 0x8f, 0xbb, 0xd8, 0xd5, 0x1f, 0xbc, 0x3e, 0x7d, 0x6e,
	0xd3, 0x5c, 0x66, 0xcd, 0x3e, 0x38, 0xb0, 0x32, 0x2c, 0x38, 0x3b, 0x66, 0xa4, 0x0c, 0x53, 0x5e,
	0x1f, 0x56, 0x99, 0x94, 0xf5, 0x8a, 0x7e, 0x93, 0xb2, 0x2e, 0x68, 0xa8, 0x7f, 0xc9, 0x2a, 0x65,
	0xa1, 0xce, 0xd9, 0x8f, 0x35, 0xde, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0x16, 0xda, 0x5a, 0x2f,
	0x60, 0x02, 0x00, 0x00,
}
