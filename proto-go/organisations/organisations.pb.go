// Code generated by protoc-gen-go.
// source: organisations.proto
// DO NOT EDIT!

/*
Package organisations is a generated protocol buffer package.

It is generated from these files:
	organisations.proto

It has these top-level messages:
	Organisation
*/
package organisations

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Organisation struct {
	// @inject_tag: jsonapi:"primary,organisation"
	ID string `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty" jsonapi:"primary,organisation"`
	// @inject_tag: jsonapi:"attr,displayName"
	DisplayName string `protobuf:"bytes,2,opt,name=displayName" json:"displayName,omitempty" jsonapi:"attr,displayName"`
	// @inject_tag: jsonapi:"attr,registeredName"
	RegisteredName string `protobuf:"bytes,3,opt,name=registeredName" json:"registeredName,omitempty" jsonapi:"attr,registeredName"`
	// @inject_tag: jsonapi:"attr,country"
	Country string `protobuf:"bytes,4,opt,name=country" json:"country,omitempty" jsonapi:"attr,country"`
	// @inject_tag: jsonapi:"attr,currency"
	Currency string `protobuf:"bytes,5,opt,name=currency" json:"currency,omitempty" jsonapi:"attr,currency"`
	// @inject_tag: jsonapi:"attr,companyNumber"
	CompanyNumber int64 `protobuf:"varint,6,opt,name=companyNumber" json:"companyNumber,omitempty" jsonapi:"attr,companyNumber"`
	// @inject_tag: jsonapi:"attr,sageReference"
	SageReference string `protobuf:"bytes,7,opt,name=sageReference" json:"sageReference,omitempty" jsonapi:"attr,sageReference"`
	// @inject_tag: jsonapi:"attr,brandHexColor"
	BrandHexColor string `protobuf:"bytes,8,opt,name=brandHexColor" json:"brandHexColor,omitempty" jsonapi:"attr,brandHexColor"`
	// @inject_tag: jsonapi:"attr,brandLogoId"
	BrandLogoID string `protobuf:"bytes,9,opt,name=brandLogoID" json:"brandLogoID,omitempty" jsonapi:"attr,brandLogoId"`
	// @inject_tag: jsonapi:"attr,role"
	Role string `protobuf:"bytes,10,opt,name=role" json:"role,omitempty" jsonapi:"attr,role"`
	// @inject_tag: jsonapi:"attr,managerId"
	ManagerID string `protobuf:"bytes,11,opt,name=managerID" json:"managerID,omitempty" jsonapi:"attr,managerId"`
}

func (m *Organisation) Reset()                    { *m = Organisation{} }
func (m *Organisation) String() string            { return proto.CompactTextString(m) }
func (*Organisation) ProtoMessage()               {}
func (*Organisation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Organisation) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Organisation) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Organisation) GetRegisteredName() string {
	if m != nil {
		return m.RegisteredName
	}
	return ""
}

func (m *Organisation) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Organisation) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Organisation) GetCompanyNumber() int64 {
	if m != nil {
		return m.CompanyNumber
	}
	return 0
}

func (m *Organisation) GetSageReference() string {
	if m != nil {
		return m.SageReference
	}
	return ""
}

func (m *Organisation) GetBrandHexColor() string {
	if m != nil {
		return m.BrandHexColor
	}
	return ""
}

func (m *Organisation) GetBrandLogoID() string {
	if m != nil {
		return m.BrandLogoID
	}
	return ""
}

func (m *Organisation) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *Organisation) GetManagerID() string {
	if m != nil {
		return m.ManagerID
	}
	return ""
}

func init() {
	proto.RegisterType((*Organisation)(nil), "organisations.Organisation")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Organisations service

type OrganisationsClient interface {
}

type organisationsClient struct {
	c           client.Client
	serviceName string
}

func NewOrganisationsClient(serviceName string, c client.Client) OrganisationsClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "organisations"
	}
	return &organisationsClient{
		c:           c,
		serviceName: serviceName,
	}
}

// Server API for Organisations service

type OrganisationsHandler interface {
}

func RegisterOrganisationsHandler(s server.Server, hdlr OrganisationsHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Organisations{hdlr}, opts...))
}

type Organisations struct {
	OrganisationsHandler
}

func init() { proto.RegisterFile("organisations.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 288 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x69, 0x5a, 0xfb, 0x67, 0x6a, 0x2b, 0xac, 0x97, 0x45, 0x3c, 0x14, 0x11, 0xe9, 0x41,
	0x5b, 0xd0, 0x37, 0xd0, 0x1c, 0x0c, 0x48, 0x85, 0x1e, 0xbd, 0x6d, 0xd2, 0x71, 0x0d, 0x24, 0x3b,
	0x61, 0x36, 0x01, 0xf7, 0x7d, 0x7d, 0x10, 0xc9, 0x14, 0x35, 0xf1, 0xb6, 0xf3, 0xfb, 0x7e, 0xbb,
	0x30, 0xfb, 0xc1, 0x39, 0xb1, 0x35, 0x2e, 0xf7, 0xa6, 0xce, 0xc9, 0xf9, 0x4d, 0xc5, 0x54, 0x93,
	0x5a, 0xf4, 0xe0, 0xd5, 0x57, 0x04, 0xa7, 0xaf, 0x1d, 0xa2, 0x96, 0x10, 0x25, 0xb1, 0x1e, 0xac,
	0x06, 0xeb, 0xd9, 0x3e, 0x4a, 0x62, 0xb5, 0x82, 0xf9, 0x21, 0xf7, 0x55, 0x61, 0xc2, 0xce, 0x94,
	0xa8, 0x23, 0x09, 0xba, 0x48, 0xdd, 0xc0, 0x92, 0xd1, 0xe6, 0xbe, 0x46, 0xc6, 0x83, 0x48, 0x43,
	0x91, 0xfe, 0x51, 0xa5, 0x61, 0x92, 0x51, 0xe3, 0x6a, 0x0e, 0x7a, 0x24, 0xc2, 0xcf, 0xa8, 0x2e,
	0x60, 0x9a, 0x35, 0xcc, 0xe8, 0xb2, 0xa0, 0x4f, 0x24, 0xfa, 0x9d, 0xd5, 0x35, 0x2c, 0x32, 0x2a,
	0x2b, 0xe3, 0xc2, 0xae, 0x29, 0x53, 0x64, 0x3d, 0x5e, 0x0d, 0xd6, 0xc3, 0x7d, 0x1f, 0xb6, 0x96,
	0x37, 0x16, 0xf7, 0xf8, 0x8e, 0xed, 0x35, 0xd4, 0x13, 0x79, 0xa6, 0x0f, 0x5b, 0x2b, 0x65, 0xe3,
	0x0e, 0xcf, 0xf8, 0xf9, 0x44, 0x05, 0xb1, 0x9e, 0x1e, 0xad, 0x1e, 0x6c, 0x37, 0x16, 0xf0, 0x42,
	0x96, 0x92, 0x58, 0xcf, 0x8e, 0x1b, 0x77, 0x90, 0x52, 0x30, 0x62, 0x2a, 0x50, 0x83, 0x44, 0x72,
	0x56, 0x97, 0x30, 0x2b, 0x8d, 0x33, 0x16, 0x39, 0x89, 0xf5, 0x5c, 0x82, 0x3f, 0x70, 0x7f, 0x06,
	0x8b, 0xee, 0x2f, 0xfb, 0xc7, 0xcd, 0xdb, 0xad, 0xcd, 0xeb, 0x8f, 0x26, 0xdd, 0x64, 0x54, 0x6e,
	0x7d, 0x5e, 0xf9, 0xe0, 0x90, 0x6d, 0xd8, 0x4a, 0x4b, 0x77, 0x96, 0xb6, 0xbd, 0x9e, 0xd2, 0xb1,
	0xf0, 0x87, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb3, 0xc6, 0x06, 0x2c, 0xd4, 0x01, 0x00, 0x00,
}
